{
  "address": "0x791056f7EfF8f2a235b6cb7041e53C8BC9a8BFF0",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_trustedForwarder",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "supporterNFTAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "contentID",
          "type": "string"
        }
      ],
      "name": "AlreadyArchived",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "contentID",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "contentURL",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "title",
          "type": "string"
        }
      ],
      "name": "ArchiveAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "contentID",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "contentURL",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "title",
          "type": "string"
        }
      ],
      "name": "addArchive",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "archiveAdded",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTrustedForwarder",
      "outputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "name": "isTrustedForwarder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "revoke",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "uri",
          "type": "string"
        }
      ],
      "name": "setSupporterTokenURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_trustedForwarder",
          "type": "address"
        }
      ],
      "name": "setTrustedForwarder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "support",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "supporterNFT",
      "outputs": [
        {
          "internalType": "contract ISupporterNFT",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "versionRecipient",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x3fe6b74810281789ce21bac961947c1f8d83767f6ad7010a50062ba95e1ffba2",
  "receipt": {
    "to": null,
    "from": "0xF5c112997fe4Ca52abe1acC9552C64666EF5C8e1",
    "contractAddress": "0x791056f7EfF8f2a235b6cb7041e53C8BC9a8BFF0",
    "transactionIndex": 4,
    "gasUsed": "718198",
    "logsBloom": "0x
    "blockHash": "0x7a73e02e5da7b6e2f52f7507f9d70ac636c14e023e166745c5d6223244fc8dec",
    "transactionHash": "0x3fe6b74810281789ce21bac961947c1f8d83767f6ad7010a50062ba95e1ffba2",
    "logs": [
      {
        "transactionIndex": 4,
        "blockNumber": 27731275,
        "transactionHash": "0x3fe6b74810281789ce21bac961947c1f8d83767f6ad7010a50062ba95e1ffba2",
        "address": "0x791056f7EfF8f2a235b6cb7041e53C8BC9a8BFF0",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000f5c112997fe4ca52abe1acc9552c64666ef5c8e1"
        ],
        "data": "0x",
        "logIndex": 26,
        "blockHash": "0x7a73e02e5da7b6e2f52f7507f9d70ac636c14e023e166745c5d6223244fc8dec"
      },
      {
        "transactionIndex": 4,
        "blockNumber": 27731275,
        "transactionHash": "0x3fe6b74810281789ce21bac961947c1f8d83767f6ad7010a50062ba95e1ffba2",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000f5c112997fe4ca52abe1acc9552c64666ef5c8e1",
          "0x000000000000000000000000c26880a0af2ea0c7e8130e6ec47af756465452e8"
        ],
        "data": "0x00000000000000000000000000000000000000000000000000553403261e0f6a000000000000000000000000000000000000000000000000761bd755537deec200000000000000000000000000000000000000000000145c58d7d1dae4ca9b0900000000000000000000000000000000000000000000000075c6a3522d5fdf5800000000000000000000000000000000000000000000145c592d05de0ae8aa73",
        "logIndex": 27,
        "blockHash": "0x7a73e02e5da7b6e2f52f7507f9d70ac636c14e023e166745c5d6223244fc8dec"
      }
    ],
    "blockNumber": 27731275,
    "cumulativeGasUsed": "2392575",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x9399BB24DBB5C4b782C70c2969F58716Ebbd6a3b",
    "0x2670c144A0b1AA120d6FbCFa2A086c14BFab5396"
  ],
  "numDeployments": 1,
  "solcInputHash": "135826fb3f145e9e9f72365ecdaa6e41",
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_trustedForwarder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"supporterNFTAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"contentID\",\"type\":\"string\"}],\"name\":\"AlreadyArchived\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"contentID\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"contentURL\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"}],\"name\":\"ArchiveAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"contentID\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"contentURL\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"}],\"name\":\"addArchive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"archiveAdded\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTrustedForwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"revoke\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"setSupporterTokenURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_trustedForwarder\",\"type\":\"address\"}],\"name\":\"setTrustedForwarder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"support\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"supporterNFT\",\"outputs\":[{\"internalType\":\"contract ISupporterNFT\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"versionRecipient\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getTrustedForwarder()\":{\"returns\":{\"forwarder\":\"The address of the Forwarder contract that is being used.\"}},\"isTrustedForwarder(address)\":{\"params\":{\"forwarder\":\"The address of the Forwarder contract that is being used.\"},\"returns\":{\"_0\":\"isTrustedForwarder `true` if the Forwarder is trusted to forward relayed transactions by this Recipient.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getTrustedForwarder()\":{\"notice\":\":warning: **Warning** :warning: The Forwarder can have a full control over your Recipient. Only trust verified Forwarder.Method is not a required method to allow Recipients to trust multiple Forwarders. Not recommended yet.\"},\"isTrustedForwarder(address)\":{\"notice\":\":warning: **Warning** :warning: The Forwarder can have a full control over your Recipient. Only trust verified Forwarder.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DArchive.sol\":\"DArchive\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@opengsn/contracts/src/ERC2771Recipient.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// solhint-disable no-inline-assembly\\npragma solidity >=0.6.9;\\n\\nimport \\\"./interfaces/IERC2771Recipient.sol\\\";\\n\\n/**\\n * @title The ERC-2771 Recipient Base Abstract Class - Implementation\\n *\\n * @notice Note that this contract was called `BaseRelayRecipient` in the previous revision of the GSN.\\n *\\n * @notice A base contract to be inherited by any contract that want to receive relayed transactions.\\n *\\n * @notice A subclass must use `_msgSender()` instead of `msg.sender`.\\n */\\nabstract contract ERC2771Recipient is IERC2771Recipient {\\n\\n    /*\\n     * Forwarder singleton we accept calls from\\n     */\\n    address private _trustedForwarder;\\n\\n    /**\\n     * :warning: **Warning** :warning: The Forwarder can have a full control over your Recipient. Only trust verified Forwarder.\\n     * @notice Method is not a required method to allow Recipients to trust multiple Forwarders. Not recommended yet.\\n     * @return forwarder The address of the Forwarder contract that is being used.\\n     */\\n    function getTrustedForwarder() public virtual view returns (address forwarder){\\n        return _trustedForwarder;\\n    }\\n\\n    function _setTrustedForwarder(address _forwarder) internal {\\n        _trustedForwarder = _forwarder;\\n    }\\n\\n    /// @inheritdoc IERC2771Recipient\\n    function isTrustedForwarder(address forwarder) public virtual override view returns(bool) {\\n        return forwarder == _trustedForwarder;\\n    }\\n\\n    /// @inheritdoc IERC2771Recipient\\n    function _msgSender() internal override virtual view returns (address ret) {\\n        if (msg.data.length >= 20 && isTrustedForwarder(msg.sender)) {\\n            // At this point we know that the sender is a trusted forwarder,\\n            // so we trust that the last bytes of msg.data are the verified sender address.\\n            // extract sender address from the end of msg.data\\n            assembly {\\n                ret := shr(96,calldataload(sub(calldatasize(),20)))\\n            }\\n        } else {\\n            ret = msg.sender;\\n        }\\n    }\\n\\n    /// @inheritdoc IERC2771Recipient\\n    function _msgData() internal override virtual view returns (bytes calldata ret) {\\n        if (msg.data.length >= 20 && isTrustedForwarder(msg.sender)) {\\n            return msg.data[0:msg.data.length-20];\\n        } else {\\n            return msg.data;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x77b3307c570c582969ea5466f296898ab9fea1f8b61b30f1c73345fe047a89a9\",\"license\":\"MIT\"},\"@opengsn/contracts/src/interfaces/IERC2771Recipient.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.6.0;\\n\\n/**\\n * @title The ERC-2771 Recipient Base Abstract Class - Declarations\\n *\\n * @notice A contract must implement this interface in order to support relayed transaction.\\n *\\n * @notice It is recommended that your contract inherits from the ERC2771Recipient contract.\\n */\\nabstract contract IERC2771Recipient {\\n\\n    /**\\n     * :warning: **Warning** :warning: The Forwarder can have a full control over your Recipient. Only trust verified Forwarder.\\n     * @param forwarder The address of the Forwarder contract that is being used.\\n     * @return isTrustedForwarder `true` if the Forwarder is trusted to forward relayed transactions by this Recipient.\\n     */\\n    function isTrustedForwarder(address forwarder) public virtual view returns(bool);\\n\\n    /**\\n     * @notice Use this method the contract anywhere instead of msg.sender to support relayed transactions.\\n     * @return sender The real sender of this call.\\n     * For a call that came through the Forwarder the real sender is extracted from the last 20 bytes of the `msg.data`.\\n     * Otherwise simply returns `msg.sender`.\\n     */\\n    function _msgSender() internal virtual view returns (address);\\n\\n    /**\\n     * @notice Use this method in the contract instead of `msg.data` when difference matters (hashing, signature, etc.)\\n     * @return data The real `msg.data` of this call.\\n     * For a call that came through the Forwarder, the real sender address was appended as the last 20 bytes\\n     * of the `msg.data` - so this method will strip those 20 bytes off.\\n     * Otherwise (if the call was made directly and not through the forwarder) simply returns `msg.data`.\\n     */\\n    function _msgData() internal virtual view returns (bytes calldata);\\n}\\n\",\"keccak256\":\"0xc762358681e3494519a5fff2f7e3f0f74f9c9f395f23b00cdfb45e0fb9ef8170\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/DArchive.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.10;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@opengsn/contracts/src/ERC2771Recipient.sol\\\";\\n\\ninterface ISupporterNFT {\\n    function safeMint(address to) external;\\n\\n    function setSupporterTokenURI(string memory uri) external;\\n\\n    function burn(uint256 tokenId) external;\\n\\n    function revoke(uint256 tokenId) external;\\n\\n    function balanceOf(address owner) external view returns (uint256);\\n}\\n\\ncontract DArchive is ERC2771Recipient, Ownable {\\n    event ArchiveAdded(string contentID, string contentURL, string title);\\n    error AlreadyArchived(string contentID);\\n\\n    mapping(string => bool) public archiveAdded;\\n    ISupporterNFT public supporterNFT;\\n\\n    constructor(address _trustedForwarder, address supporterNFTAddress) {\\n        _setTrustedForwarder(_trustedForwarder);\\n        supporterNFT = ISupporterNFT(supporterNFTAddress);\\n    }\\n\\n    function addArchive(\\n        string calldata contentID,\\n        string calldata contentURL,\\n        string calldata title\\n    ) public {\\n        if (archiveAdded[contentID]) {\\n            revert AlreadyArchived(contentID);\\n        }\\n        archiveAdded[contentID] = true;\\n        emit ArchiveAdded(contentID, contentURL, title);\\n    }\\n\\n    function setTrustedForwarder(address _trustedForwarder) public onlyOwner {\\n        _setTrustedForwarder(_trustedForwarder);\\n    }\\n\\n    function _msgSender()\\n        internal\\n        view\\n        override(Context, ERC2771Recipient)\\n        returns (address sender)\\n    {\\n        sender = ERC2771Recipient._msgSender();\\n    }\\n\\n    function _msgData()\\n        internal\\n        view\\n        override(Context, ERC2771Recipient)\\n        returns (bytes calldata)\\n    {\\n        return ERC2771Recipient._msgData();\\n    }\\n\\n    function versionRecipient() external pure returns (string memory) {\\n        return \\\"2.2.0\\\";\\n    }\\n\\n    function setSupporterTokenURI(string memory uri) public onlyOwner {\\n        supporterNFT.setSupporterTokenURI(uri);\\n    }\\n\\n    function revoke(uint256 tokenId) external onlyOwner {\\n        supporterNFT.revoke(tokenId);\\n    }\\n\\n    function withdraw(uint256 amount) external onlyOwner {\\n        if (address(this).balance >= amount) {\\n            (bool sent, ) = msg.sender.call{value: amount}(\\\"\\\");\\n            require(sent, \\\"Failed to withdraw MATIC\\\");\\n        }\\n    }\\n\\n    function _mint(address to) internal {\\n        if (supporterNFT.balanceOf(to) == 0) {\\n            supporterNFT.safeMint(to);\\n        }\\n    }\\n\\n    function support() external payable {\\n        _mint(msg.sender);\\n    }\\n\\n    receive() external payable {\\n        _mint(msg.sender);\\n    }\\n}\\n\",\"keccak256\":\"0xe357fd1315bd4f13a8fec7041bfbe03511ba3e6e27e257ca706fd1c1b9fab0df\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610c1d380380610c1d83398101604081905261002f9161012b565b61003f61003a610070565b610089565b600080546001600160a01b039384166001600160a01b0319918216179091556003805492909316911617905561015e565b60006100846100db60201b61066d1760201c565b905090565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000601436108015906100f857506000546001600160a01b031633145b1561010a575060131936013560601c90565b503390565b80516001600160a01b038116811461012657600080fd5b919050565b6000806040838503121561013e57600080fd5b6101478361010f565b91506101556020840161010f565b90509250929050565b610ab08061016d6000396000f3fe6080604052600436106100e15760003560e01c80638397ef2f1161007f578063ce1b815f11610059578063ce1b815f1461027c578063da7422281461029a578063f2fde38b146102ba578063f31fecc9146102da57600080fd5b80638397ef2f146101ef5780638da5cb5b1461020f578063cc82cf871461024157600080fd5b8063486ff0cd116100bb578063486ff0cd1461013e5780634b6a0c311461017b578063572b6c051461019b578063715018a6146101da57600080fd5b8063119f8747146100f657806320c5429b146100fe5780632e1a7d4d1461011e57600080fd5b366100f1576100ef336102fa565b005b600080fd5b6100ef6103d0565b34801561010a57600080fd5b506100ef61011936600461077b565b6103db565b34801561012a57600080fd5b506100ef61013936600461077b565b610414565b34801561014a57600080fd5b5060408051808201825260058152640322e322e360dc1b602082015290516101729190610794565b60405180910390f35b34801561018757600080fd5b506100ef6101963660046107ff565b6104c4565b3480156101a757600080fd5b506101ca6101b63660046108b0565b6000546001600160a01b0391821691161490565b6040519015158152602001610172565b3480156101e657600080fd5b506100ef6104fc565b3480156101fb57600080fd5b506100ef61020a366004610929565b61050e565b34801561021b57600080fd5b506001546001600160a01b03165b6040516001600160a01b039091168152602001610172565b34801561024d57600080fd5b506101ca61025c3660046107ff565b805160208183018101805160028252928201919093012091525460ff1681565b34801561028857600080fd5b506000546001600160a01b0316610229565b3480156102a657600080fd5b506100ef6102b53660046108b0565b6105d1565b3480156102c657600080fd5b506100ef6102d53660046108b0565b6105f7565b3480156102e657600080fd5b50600354610229906001600160a01b031681565b6003546040516370a0823160e01b81526001600160a01b038381166004830152909116906370a0823190602401602060405180830381865afa158015610344573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036891906109c3565b6103cd576003546040516340d097c360e01b81526001600160a01b038381166004830152909116906340d097c3906024015b600060405180830381600087803b1580156103b457600080fd5b505af11580156103c8573d6000803e3d6000fd5b505050505b50565b6103d9336102fa565b565b6103e36106a1565b6003546040516320c5429b60e01b8152600481018390526001600160a01b03909116906320c5429b9060240161039a565b61041c6106a1565b8047106103cd57604051600090339083908381818185875af1925050503d8060008114610465576040519150601f19603f3d011682016040523d82523d6000602084013e61046a565b606091505b50509050806104c05760405162461bcd60e51b815260206004820152601860248201527f4661696c656420746f207769746864726177204d41544943000000000000000060448201526064015b60405180910390fd5b5050565b6104cc6106a1565b600354604051634b6a0c3160e01b81526001600160a01b0390911690634b6a0c319061039a908490600401610794565b6105046106a1565b6103d9600061071a565b600286866040516105209291906109dc565b9081526040519081900360200190205460ff161561055557858560405163f559f28f60e01b81526004016104b7929190610a15565b6001600287876040516105699291906109dc565b908152604051908190036020018120805492151560ff19909316929092179091557f4c73c9d4adf4c6421c217e2f96d405f1056142fe715a2f7fe3e90214008b8058906105c190889088908890889088908890610a31565b60405180910390a1505050505050565b6105d96106a1565b600080546001600160a01b0319166001600160a01b03831617905550565b6105ff6106a1565b6001600160a01b0381166106645760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104b7565b6103cd8161071a565b60006014361080159061068a57506000546001600160a01b031633145b1561069c575060131936013560601c90565b503390565b6106a961076c565b6001600160a01b03166106c46001546001600160a01b031690565b6001600160a01b0316146103d95760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104b7565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600061077661066d565b905090565b60006020828403121561078d57600080fd5b5035919050565b600060208083528351808285015260005b818110156107c1578581018301518582016040015282016107a5565b818111156107d3576000604083870101525b50601f01601f1916929092016040019392505050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561081157600080fd5b813567ffffffffffffffff8082111561082957600080fd5b818401915084601f83011261083d57600080fd5b81358181111561084f5761084f6107e9565b604051601f8201601f19908116603f01168101908382118183101715610877576108776107e9565b8160405282815287602084870101111561089057600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000602082840312156108c257600080fd5b81356001600160a01b03811681146108d957600080fd5b9392505050565b60008083601f8401126108f257600080fd5b50813567ffffffffffffffff81111561090a57600080fd5b60208301915083602082850101111561092257600080fd5b9250929050565b6000806000806000806060878903121561094257600080fd5b863567ffffffffffffffff8082111561095a57600080fd5b6109668a838b016108e0565b9098509650602089013591508082111561097f57600080fd5b61098b8a838b016108e0565b909650945060408901359150808211156109a457600080fd5b506109b189828a016108e0565b979a9699509497509295939492505050565b6000602082840312156109d557600080fd5b5051919050565b8183823760009101908152919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b602081526000610a296020830184866109ec565b949350505050565b606081526000610a4560608301888a6109ec565b8281036020840152610a588187896109ec565b90508281036040840152610a6d8185876109ec565b999850505050505050505056fea2646970667358221220670f23ffc43fd55cd22b39c4906648a1857ca5cdc413cd13a48475d76e74c96d64736f6c634300080a0033",
  "deployedBytecode": "0x6080604052600436106100e15760003560e01c80638397ef2f1161007f578063ce1b815f11610059578063ce1b815f1461027c578063da7422281461029a578063f2fde38b146102ba578063f31fecc9146102da57600080fd5b80638397ef2f146101ef5780638da5cb5b1461020f578063cc82cf871461024157600080fd5b8063486ff0cd116100bb578063486ff0cd1461013e5780634b6a0c311461017b578063572b6c051461019b578063715018a6146101da57600080fd5b8063119f8747146100f657806320c5429b146100fe5780632e1a7d4d1461011e57600080fd5b366100f1576100ef336102fa565b005b600080fd5b6100ef6103d0565b34801561010a57600080fd5b506100ef61011936600461077b565b6103db565b34801561012a57600080fd5b506100ef61013936600461077b565b610414565b34801561014a57600080fd5b5060408051808201825260058152640322e322e360dc1b602082015290516101729190610794565b60405180910390f35b34801561018757600080fd5b506100ef6101963660046107ff565b6104c4565b3480156101a757600080fd5b506101ca6101b63660046108b0565b6000546001600160a01b0391821691161490565b6040519015158152602001610172565b3480156101e657600080fd5b506100ef6104fc565b3480156101fb57600080fd5b506100ef61020a366004610929565b61050e565b34801561021b57600080fd5b506001546001600160a01b03165b6040516001600160a01b039091168152602001610172565b34801561024d57600080fd5b506101ca61025c3660046107ff565b805160208183018101805160028252928201919093012091525460ff1681565b34801561028857600080fd5b506000546001600160a01b0316610229565b3480156102a657600080fd5b506100ef6102b53660046108b0565b6105d1565b3480156102c657600080fd5b506100ef6102d53660046108b0565b6105f7565b3480156102e657600080fd5b50600354610229906001600160a01b031681565b6003546040516370a0823160e01b81526001600160a01b038381166004830152909116906370a0823190602401602060405180830381865afa158015610344573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036891906109c3565b6103cd576003546040516340d097c360e01b81526001600160a01b038381166004830152909116906340d097c3906024015b600060405180830381600087803b1580156103b457600080fd5b505af11580156103c8573d6000803e3d6000fd5b505050505b50565b6103d9336102fa565b565b6103e36106a1565b6003546040516320c5429b60e01b8152600481018390526001600160a01b03909116906320c5429b9060240161039a565b61041c6106a1565b8047106103cd57604051600090339083908381818185875af1925050503d8060008114610465576040519150601f19603f3d011682016040523d82523d6000602084013e61046a565b606091505b50509050806104c05760405162461bcd60e51b815260206004820152601860248201527f4661696c656420746f207769746864726177204d41544943000000000000000060448201526064015b60405180910390fd5b5050565b6104cc6106a1565b600354604051634b6a0c3160e01b81526001600160a01b0390911690634b6a0c319061039a908490600401610794565b6105046106a1565b6103d9600061071a565b600286866040516105209291906109dc565b9081526040519081900360200190205460ff161561055557858560405163f559f28f60e01b81526004016104b7929190610a15565b6001600287876040516105699291906109dc565b908152604051908190036020018120805492151560ff19909316929092179091557f4c73c9d4adf4c6421c217e2f96d405f1056142fe715a2f7fe3e90214008b8058906105c190889088908890889088908890610a31565b60405180910390a1505050505050565b6105d96106a1565b600080546001600160a01b0319166001600160a01b03831617905550565b6105ff6106a1565b6001600160a01b0381166106645760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104b7565b6103cd8161071a565b60006014361080159061068a57506000546001600160a01b031633145b1561069c575060131936013560601c90565b503390565b6106a961076c565b6001600160a01b03166106c46001546001600160a01b031690565b6001600160a01b0316146103d95760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104b7565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600061077661066d565b905090565b60006020828403121561078d57600080fd5b5035919050565b600060208083528351808285015260005b818110156107c1578581018301518582016040015282016107a5565b818111156107d3576000604083870101525b50601f01601f1916929092016040019392505050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561081157600080fd5b813567ffffffffffffffff8082111561082957600080fd5b818401915084601f83011261083d57600080fd5b81358181111561084f5761084f6107e9565b604051601f8201601f19908116603f01168101908382118183101715610877576108776107e9565b8160405282815287602084870101111561089057600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000602082840312156108c257600080fd5b81356001600160a01b03811681146108d957600080fd5b9392505050565b60008083601f8401126108f257600080fd5b50813567ffffffffffffffff81111561090a57600080fd5b60208301915083602082850101111561092257600080fd5b9250929050565b6000806000806000806060878903121561094257600080fd5b863567ffffffffffffffff8082111561095a57600080fd5b6109668a838b016108e0565b9098509650602089013591508082111561097f57600080fd5b61098b8a838b016108e0565b909650945060408901359150808211156109a457600080fd5b506109b189828a016108e0565b979a9699509497509295939492505050565b6000602082840312156109d557600080fd5b5051919050565b8183823760009101908152919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b602081526000610a296020830184866109ec565b949350505050565b606081526000610a4560608301888a6109ec565b8281036020840152610a588187896109ec565b90508281036040840152610a6d8185876109ec565b999850505050505050505056fea2646970667358221220670f23ffc43fd55cd22b39c4906648a1857ca5cdc413cd13a48475d76e74c96d64736f6c634300080a0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "getTrustedForwarder()": {
        "returns": {
          "forwarder": "The address of the Forwarder contract that is being used."
        }
      },
      "isTrustedForwarder(address)": {
        "params": {
          "forwarder": "The address of the Forwarder contract that is being used."
        },
        "returns": {
          "_0": "isTrustedForwarder `true` if the Forwarder is trusted to forward relayed transactions by this Recipient."
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "getTrustedForwarder()": {
        "notice": ":warning: **Warning** :warning: The Forwarder can have a full control over your Recipient. Only trust verified Forwarder.Method is not a required method to allow Recipients to trust multiple Forwarders. Not recommended yet."
      },
      "isTrustedForwarder(address)": {
        "notice": ":warning: **Warning** :warning: The Forwarder can have a full control over your Recipient. Only trust verified Forwarder."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/DArchive.sol:DArchive",
        "label": "_trustedForwarder",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 134,
        "contract": "contracts/DArchive.sol:DArchive",
        "label": "_owner",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 2097,
        "contract": "contracts/DArchive.sol:DArchive",
        "label": "archiveAdded",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_string_memory_ptr,t_bool)"
      },
      {
        "astId": 2100,
        "contract": "contracts/DArchive.sol:DArchive",
        "label": "supporterNFT",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(ISupporterNFT)2077"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(ISupporterNFT)2077": {
        "encoding": "inplace",
        "label": "contract ISupporterNFT",
        "numberOfBytes": "20"
      },
      "t_mapping(t_string_memory_ptr,t_bool)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      }
    }
  }
}